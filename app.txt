var express = require("express");
//var mongoose = require("mongoose");
var passport = require("passport");
var bodyParser = require("body-parser");
var user = require("./models/user");
var localStrategy = require("passport-local");
var passportLocalMongoose = require("passport-local-mongoose");
var request = require("request");
const stripe = require('stripe')('sk_test_nZeU7gp3SueUvy3RnAUNR1mF');

var app = express();
app.set('view engine','ejs');
app.use(bodyParser.urlencoded({extended: true}));




// mongoose.connect("mongodb://localhost/yelp_camp");
// var campgroundSchema = new mongoose.Schema({
//     name: Number,
//     usage:Number
// });



// var Campground = mongoose.model("Campground",campgroundSchema);
// var act;
// var id = "5aa7994ff24d1c2862a96b6e";
var bal = 2500;




//route// 
//==========================//
var flag = 0 , flag2 = 0;
// app.use(require("express-session")({
//     secret:"hola",
//     resave : false ,
//     saveUninitialized:false
// }));

app.get("/",function(req,res){
    res.render("home");
    flag = 0 ;
});
app.get("/set",function(req,res){
    res.render("Login_v1/index");
    flag = 0 ;
});
app.get('/pay',(req ,res)=>{
    res.render('pay');
});

app.get("/update",function(req,res){
    res.render("update");
    
});
var val;
app.post("/register",function(req,res){
    if(flag==1)
    res.send("please login");
    if(flag==0){
    var query = req.query.search;
      console.log(query);
      flag2 = 0;
      request("https://api.thingspeak.com/channels/448247/fields/1/last.json",function(error, response, body) {
       if(!error && response.statusCode==200){
           var two = JSON.parse(body);
           val = two["field1"];   
           console.log(two["field1"]);
       } 
    });
      if(val>2500){
      request("https://maker.ifttt.com/trigger/Power value/with/key/i0CtxL0bTJ32g1BuWCmvvAUSiS1WoKVtBxC5-IayXIz",function(error,response ,body){
      if(!error && response.statusCode==200){
        console.log("Mail sent");      
      }
      
  }); 
        query=0; 
        console.log("query updated");
      }
      request("https://api.thingspeak.com/update?api_key=LSC0VWBD2UQP0SWB&field2="+query,function(error,response ,body){
      if(!error && response.statusCode==200){
        //var one = JSON.parse(body);
      // res.send(one["field1"]);
        res.render("secret",{data : bal,val});
        console.log("okay");
        //console.log(bal);
      }
  });
    }
});
// -----------------------------------------------
app.get("/secret",function(req,res){
    if(flag==1)
    res.send("please login");
    if(flag==0){
    var query = req.query.search;
      console.log(query);
      flag2 = 0;
      request("https://api.thingspeak.com/channels/448247/fields/1/last.json",function(error, response, body) {
       if(!error && response.statusCode==200){
           var two = JSON.parse(body);
           val = two["field1"];   
           console.log(two["field1"]);
       } 
    });
      if(val>2500){
      request("https://maker.ifttt.com/trigger/Power value/with/key/i0CtxL0bTJ32g1BuWCmvvAUSiS1WoKVtBxC5-IayXIz",function(error,response ,body){
      if(!error && response.statusCode==200){
        console.log("Mail sent");      
      }
      
  }); 
        query=0; 
        console.log("query updated");
      }
      request("https://api.thingspeak.com/update?api_key=LSC0VWBD2UQP0SWB&field2="+query,function(error,response ,body){
      if(!error && response.statusCode==200){
        //var one = JSON.parse(body);
      // res.send(one["field1"]);
        res.render("secret",{data : bal,val});
        console.log("okay");
        //console.log(bal);
      }
  });
    }
});

// app.get("/secrett",function(req,res){
//         if(flag2==0){
//       var query = req.query.search;
//       console.log(query);
//         }
//         if(flag2==1)
//         {
//             query = 0;
            
//         }
//       request("https://api.thingspeak.com/update?api_key=LSC0VWBD2UQP0SWB&field2="+query,function(error,response ,body){
//       if(!error && response.statusCode==200){
//         console.log("data to graph sent !! ");   
//       }
//   });
//   request("https://api.thingspeak.com/channels/448247/feeds/last.json",function(error, response, body) {
//          var one = JSON.parse(body);
//         console.log("Response received from field 1 is - ");
//         console.log(one["field1"]);
//         act = one["field1"];   
//         if(act == 2500)
//         {   flag2 =1 ;
            
//         }
//         else{flag2=0}
       
//   });

//      Campground.findById(id, function (err, tank) {
//   if (err)console.log(err);
//   else{
//   tank.usage = act;
  
  
//   tank.save(function (err, updatedTank) {
//     if (err) console.log("404");
//     else 
//     {   console.log("updating database")
//         console.log(updatedTank);}
//   });
//   }

// });
//     Campground.find({},function (err,alldata) {
//           if(err){console.log(err);}
//           else{
//               res.render("secret",{campgrounds:alldata})
//           }
//       })
// });

//----------------------------//
app.get("/register",function(req, res) {
   res.render("register") 
});

//----------------------------//
app.get("/secrete",function(req, res) {
   res.render("secret") 
});//---------------------------//

// app.post("/register",function(req, res) {
//   req.body.username
//   req.body.password
//   console.log(req.body.username);
//   if(req.body.username == "siva" && req.body.password=="starfall")
//   {console.log("success");
    
//     flag = 1;   
    
//     // Campground.find({},function (err,alldata) {
//     //       if(err){console.log(err);}
//     //       else{
//     //           res.render("secret",{campgrounds:alldata})
//     //       }
//     //   })
//   }
//   else
//   {
//       res.send("invalid user");
//   }
// });
app.post('/charge',(req,res)=>{
    const amount = 2500;
    stripe.customers.create({
        email: req.body.stripeEmail,
        source: req.body.stripeToken
    })
    .then(customer => stripe.charges.create({
        amount,
        description:'web dev ebook',
        currency:'usd',
        customer:customer.id
        //var one = 2500;
    }))
    .then(charge => 
        res.render('success')
        );
        
        flag2 =1 ;
         request("https://api.thingspeak.com/update?api_key=PZZLMWWH79NOQ4MS&field1=0",function(error,response ,body){
       if(!error && response.statusCode==200){
        console.log("consumption updated to graph sent !! ");   
       }
   });
//         Campground.findById(id, function (err, tank) {
//   if (err)console.log(err);
//   else{
//   tank.usage = 0;
//   tank.name = amount;
//   tank.save(function (err, updatedTank) {
//     if (err) console.log("404");
//     else 
//     {console.log(updatedTank);}
//   });
//   }

// });
        
});

app.listen(process.env.PORT,process.env.IP,function(){
    console.log("Server has started..");
});